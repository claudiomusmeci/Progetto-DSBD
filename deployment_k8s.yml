# Deployment per il servizio Notifier
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notifier-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notifier
  template:
    metadata:
      labels:
        app: notifier
    spec:
      containers:
      - name: notifier-container
        image: o46002056/notifier:0.1
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: "0.5" # Assegna una quantità moderata di CPU
            memory: "512Mi" # Assegna una quantità moderata di memoria
        env:
        - name: KAFKA_BROKER
          value: "kafka:9092"
        - name: KAFKA_TOPIC
          value: "criptovalute"
        - name: GRPC_SERVER
          value: "management:50051"
        - name: MITTENTE
          value: "sostituire"
        - name: PASSWORD
          value: "sostituire"
        - name: PYTHONUNBUFFERED
          value: "1"


---
# Service per il servizio Notifier. Nota: i 3 trattini sono delimitatori di documenti .yml; indicano l'inizio di un nuovo documento YAML all'interno dello stesso file.
apiVersion: v1
kind: Service
metadata:
  name: notifier-service
spec:
  type: NodePort
  selector:
    app: notifier
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000


---
# Deployment per il servizio Management
apiVersion: apps/v1
kind: Deployment
metadata:
  name: management-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: management
  template:
    metadata:
      labels:
        app: management
    spec:
      containers:
      - name: management-container
        image: o46002056/management:0.1
        ports:
        - containerPort: 10001
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: SERVER_GRPC
          value: "notifier-service:50051"
        - name: KAFKA_BROKER
          value: "kafka-service:9092"
        - name: KAFKA_TOPIC
          value: "criptovalute"
        - name: MITTENTE
          value: "sostituire"
        - name: PASSWORD
          value: "sostituire"
        - name: INTERVAL_TIME_SECONDS
          value: "150"


---
# Service per il servizio Management
apiVersion: v1
kind: Service
metadata:
  name: management-service
spec:
  type: NodePort
  selector:
    app: management
  ports:
    - protocol: TCP
      port: 10001
      targetPort: 10001


---
# Deployment per il servizio Retrieval
apiVersion: apps/v1
kind: Deployment
metadata:
  name: retrieval-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: retrieval
  template:
    metadata:
      labels:
        app: retrieval
    spec:
      restartPolicy: Always
      containers:
      - name: retrieval-container
        image: o46002056/retrieval:0.1
        ports:
        - containerPort: 20002
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        env:
        - name: KAFKA_BROKER
          value: "kafka-service:9092"
        - name: KAFKA_TOPIC
          value: "criptovalute"
        - name: INTERVAL_TIME_SECONDS
          value: "300"
        - name: PYTHONUNBUFFERED
          value: "1"


---
# Service per il servizio Retrieval
apiVersion: v1
kind: Service
metadata:
  name: retrieval-service
spec:
  type: NodePort
  selector:
    app: retrieval
  ports:
    - protocol: TCP
      port: 20002
      targetPort: 20002

---
# Deployment per il servizio SLA-manager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sla-manager-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sla-manager
  template:
    metadata:
      labels:
        app: sla-manager
    spec:
      containers:
      - name: slamanager-container
        image: o46002056/sla-manager:0.1
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        env:
        - name: MYSQL_HOST
          value: "mysql"
        - name: PROMETHEUS_URL
          value: "http://prometheus:9090"
        - name: INTERVAL_TIME_SECONDS
          value: "300"
        - name: PYTHONUNBUFFERED
          value: "1"


---
# Service per il servizio SLA-manager
apiVersion: v1
kind: Service
metadata:
  name: sla-manager-service
spec:
  type: NodePort
  selector:
    app: sla-manager
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
# Deployment per il servizio MySQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql-container
        image: mysql:latest
        resources:
          limits:
            cpu: "0.5"  #Assegna 0.5 unità di CPU
            memory: "512Mi"   #Assegna 512 megabyte di memoria
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password


---
# Service per il servizio MySQL
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
      - name: phpmyadmin-container
        image: phpmyadmin/phpmyadmin
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        env:
        - name: PMA_HOST
          value: "mysql-service"
        - name: PMA_PORT
          value: "3306"
        - name: PMA_USER
          value: "root"
        - name: PMA_PASSWORD
          value: "password"
        - name: PMA_ARBITRARY
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin-service
spec:
  selector:
    app: phpmyadmin
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper-container
        image: confluentinc/cp-zookeeper:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka-container
        image: confluentinc/cp-kafka:latest
        ports:
        - containerPort: 9092
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-service:9092,PLAINTEXT_HOST://localhost:29092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
  type: NodePort

---
# Deployment per il servizio Prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          readOnly: true
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-configmap  # Aggiungi questa riga
---
# ConfigMap per prometheus.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: "cadvisor"
        static_configs:
          - targets: ["cadvisor-service:8080"]
        metric_relabel_configs:
          - source_labels: ['__name__', 'instance', 'job', 'id', 'image', 'name']
            regex: '.*'
            action: keep

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cadvisor-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      labels:
        app: cadvisor
    spec:
      containers:
      - name: cadvisor
        image: google/cadvisor:latest
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        volumeMounts:
        - name: cadvisor-root
          mountPath: /rootfs
          readOnly: true
        - name: cadvisor-var-run
          mountPath: /var/run
          readOnly: false
        - name: cadvisor-sys
          mountPath: /sys
          readOnly: true
        - name: cadvisor-docker
          mountPath: /var/lib/docker/
          readOnly: true
      volumes:
      - name: cadvisor-root
        hostPath:
          path: /
      - name: cadvisor-var-run
        hostPath:
          path: /var/run
      - name: cadvisor-sys
        hostPath:
          path: /sys
      - name: cadvisor-docker
        hostPath:
          path: /var/lib/docker
version: '3'

networks:
  default:
    name: rete_container
    driver: bridge

services:
  notifier:
    image: notifier
    container_name: notifier_container
    build:
      context: ./notifier
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    restart: always
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: criptovalute
      GRPC_SERVER: management:50051
      MITTENTE: sostituire
      PASSWORD: sostituire
      PYTHONUNBUFFERED: 1
    volumes:
      - ./notifier/application:/usr/src/application:ro

  management:
    image: management
    container_name: management_container
    build:
      context: ./management
      dockerfile: Dockerfile
    ports:
      - 10001:10001
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
      MYSQL_HOST: mysql
      SERVER_GRPC: notifier:50051
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: criptovalute
      MITTENTE: sostituire
      PASSWORD: sostituire
      INTERVAL_TIME_SECONDS: 150
    volumes:
      - ./management/application:/usr/src/application:ro

  retrieval:
    image: retrieval
    container_name: retrieval_container
    build:
      context: ./cryptoretrieval
      dockerfile: Dockerfile
    ports:
      - 20002:20002
    depends_on:
      kafka:
        condition: service_healthy
    restart: always
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: criptovalute
      INTERVAL_TIME_SECONDS: 300
      PYTHONUNBUFFERED: 1
    volumes:
      - ./cryptoretrieval/application:/usr/src/application:ro

  mysql:
    image: mysql:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: database
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3306"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 20s
    volumes:  
      - ./management/application/database:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_container
    links:
      - mysql:db
    ports:
      - 8081:80
    environment:
      PMA_HOST: mysql_container
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password
      PMA_ARBITRARY: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_container
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 20s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "criptovalute:2:1"
